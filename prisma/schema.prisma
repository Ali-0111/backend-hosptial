generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model hospital {
  id                   Int                   @id @default(autoincrement())
  name                 String                @db.VarChar(255)
  address              String                @db.VarChar(255)
  hospital_credentials hospital_credentials?
  nurse                nurse[]
  vaccine_record       vaccine_record[]
}

model nurse {
  id                Int                @id @default(autoincrement())
  name              String             @db.VarChar(255)
  hospital_id       Int
  phone             String             @default("077") @db.VarChar(30)
  address           String             @default("Kabul Afghanistan") @db.VarChar(255)
  last_name         String             @default("safari") @db.VarChar(100)
  hospital          hospital           @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  nurse_credentials nurse_credentials?
  vaccine_record    vaccine_record[]
}

model child {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  nurse_id       Int?
  hospital_id    Int?
  parent_id      Int?
  blood_group    String?          @default("o+") @db.Char(4)
  dob            String?          @db.Char(12)
  gender         String?          @db.Char(8)
  mother_name    String?          @db.Char(50)
  parent         parent?          @relation(fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vaccine_record vaccine_record[]
}

model vaccine {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  vaccination_program_step vaccination_program_step[]
  vaccine_record           vaccine_record[]
}

model vaccination_program {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  number_of_steps          Int
  vaccination_program_step vaccination_program_step[]
  vaccine_record           vaccine_record[]
}

model vaccination_program_step {
  id                     Int                 @id @default(autoincrement())
  vaccination_program_id Int
  step_rank              Int
  step_name              String              @db.VarChar(255)
  vaccine_id             Int
  vaccination_program    vaccination_program @relation(fields: [vaccination_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  vaccine                vaccine             @relation(fields: [vaccine_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model vaccine_record {
  id                     Int                 @id @default(autoincrement())
  child_id               Int
  nurse_id               Int
  hospital_id            Int
  vaccination_program_id Int
  vaccine_id             Int
  step_rank              Int
  step_name              String              @db.VarChar(255)
  step_status            String              @db.VarChar(50)
  vaccination_date       DateTime?           @db.Timestamp(6)
  due_date               String?             @db.Char(10)
  child                  child               @relation(fields: [child_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  hospital               hospital            @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  nurse                  nurse               @relation(fields: [nurse_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vaccination_program    vaccination_program @relation(fields: [vaccination_program_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  vaccine                vaccine             @relation(fields: [vaccine_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hospital_credentials {
  id          Int      @id @default(autoincrement())
  hospital_id Int      @unique
  username    String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255)
  hospital    hospital @relation(fields: [hospital_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model nurse_credentials {
  id       Int    @id @default(autoincrement())
  nurse_id Int    @unique
  username String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  nurse    nurse  @relation(fields: [nurse_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model parent {
  id                 Int                 @id @default(autoincrement())
  family_name        String              @db.VarChar(255)
  address            String              @db.VarChar(255)
  phone              String              @db.VarChar(50)
  president_name     String              @db.VarChar(255)
  child              child[]
  parent_credentials parent_credentials?
}

model parent_credentials {
  id        Int    @id @default(autoincrement())
  parent_id Int    @unique
  username  String @unique @db.VarChar(255)
  password  String @db.VarChar(255)
  parent    parent @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
